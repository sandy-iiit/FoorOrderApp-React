{"ast":null,"code":"var _jsxFileName = \"/Users/dattasandeepchoragudi/html/React/Project1/src/components/Meals/AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport classes from './AvailableMeals.module.css';\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItems/MealItem\";\nimport axios from 'axios';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://foodappreact-f3ab1-default-rtdb.firebaseio.com/meals.json');\n      const data = await response.json();\n      if (!response.ok) {\n        setHttpError('Something went wrong!');\n        throw new Error('Something went wrong!');\n      }\n      console.log(httpError);\n      const loadedmeals = [];\n      for (const key in data) {\n        loadedmeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n      setMeals(loadedmeals);\n      console.log(data);\n      setLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setLoading(false);\n      setHttpError(error.message);\n    });\n    return () => {};\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.mealsloading,\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n  if (httpError !== '') {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.mealserror,\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 37\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 12\n  }, this);\n};\n_s(AvailableMeals, \"0ozmEMBwOwMEG1R9jjKZpj2tCkE=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["classes","Card","MealItem","axios","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setLoading","httpError","setHttpError","fetchMeals","response","fetch","data","json","ok","Error","console","log","loadedmeals","key","push","id","name","description","price","catch","error","message","mealsloading","mealserror","mealsList","map","meal"],"sources":["/Users/dattasandeepchoragudi/html/React/Project1/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import classes from './AvailableMeals.module.css'\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItems/MealItem\";\nimport axios from 'axios'\nimport {useEffect, useState} from \"react\";\n\n\n\nconst AvailableMeals=()=>{\n\n    const [meals,setMeals]=useState([])\n    const [isLoading,setLoading]=useState(true)\n    const [httpError,setHttpError]=useState()\n    useEffect(()=>{\n        const fetchMeals= async ()=>{\n            const response= await fetch('https://foodappreact-f3ab1-default-rtdb.firebaseio.com/meals.json')\n            const data=await response.json()\n            if(!response.ok){\n                setHttpError('Something went wrong!')\n                throw new Error('Something went wrong!')\n            }\n            console.log(httpError)\n            const loadedmeals=[]\n\n            for(const key in data){\n                loadedmeals.push({\n                    id:key,\n                    name:data[key].name,\n                    description:data[key].description,\n                    price:data[key].price,\n                })\n            }\n\n\n            setMeals(loadedmeals)\n            console.log(data)\n            setLoading(false)\n\n        }\n\n\n        fetchMeals().catch(error=>{\n            setLoading(false)\n            setHttpError(error.message)\n        });\n\n\n\n\n\n        return ()=>{}\n    },[])\n\n    if(isLoading){\n        return <section >\n            <p className={classes.mealsloading}>Loading</p>\n        </section>\n    }\n\n    if(httpError!==''){\n        return <section >\n            <p className={classes.mealserror}>{httpError}</p>\n        </section>\n    }\n    const mealsList=meals.map(meal=><MealItem id={meal.id} key={meal.id} name={meal.name} description={meal.description} price={meal.price}/>)\n    return <section className={classes.meals}>\n       <Card> <ul>\n           {mealsList}\n       </ul>\n       </Card>\n\n    </section>\n\n}\n\n\nexport default AvailableMeals"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}